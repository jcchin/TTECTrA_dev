// This is the case file for creating Matlab formatted setpoint values
// at a flight condition 
#include <setpoint_display.fnc>
#include <output_setup.fnc>
#ifdef TTECTrA  //NASA Method
	#include <TTECTrA_SP.input>	//Input from Matlab
	
	// Set the guess logic as you want
	setOption( "switchGuess", "ON" );
	setOption( "switchGuessType", "Fnet" );

	#ifdef GEAREDFAN
		// Turning the VAFN on
		setOption( "switchVAFN", "ON" );
		
		#ifdef SCHEDULE
			// Turning the VAFN schedule on
			setOption( "switchVAFNSchedule", "ON" );
		#endif
	#endif
	
	SP_Setup(); //add Run_Condition_thrust
	
	//Setup up steady state solver
	TargetThrust = 20000;
	Fnet = TargetThrust;
	//RunMaxPower();
	run(); // Running the steady state case
	int z;
	real myFn_targets[]={
10000,10952,11905,12857,13810,14762,15714,16667,17619,18571,19524,20476,21429,22381,23333,24286,25238,26190,26500
};
	for ( z=0; z < myFn_targets.entries(); ++z ) { //loop through myFn_targets
	    TargetThrust = myFn_targets[z];
	    //cout << solver.independentNames << " " << solver.dependentNames << endl; //debug
	    Fnet = TargetThrust;
		run();
	    setpoint_display(z, myFn_targets[z]);
	}
	SP_Remove();
#endif


#ifndef TTECTrA  //GT's method
	// Input the flight condition where you want to create the Matlab
	// formatted setpoint output
	Atmosphere.alt_in = 0.00;
	Atmosphere.MN = 0.00;
	Atmosphere.dTs = 0.00;

	// Set the guess logic as you want
	setOption( "switchGuess", "ON" );
	setOption( "switchGuessType", "PC" );
	
	// Turning the VAFN off
	setOption( "switchVAFN", "ON" );

	// Turning the VAFN schedule off
	setOption( "switchVAFNSchedule", "ON" );
	
	PC = 50;
	RunMaxPower();

	// Setpoint function which creates the Matlab formatted output 
	SetPoint();

	if(solver.converged == 1 && errHandler.numErrors == 0) {

		cout << "\nSet point generation at altitude" << Atmosphere.alt_in << " ft, " << "MN = " << Atmosphere.MN << ", and dTs = " << Atmosphere.dTs << " degF is successful!" << endl;

	}

	// Returning back to SLS maximum thrust condition
	setOption( "switchGuess", "ON" );
	setOption( "switchGuessType", "PC" );
	PC = 50;
	Atmosphere.alt_in = 0.0;
	Atmosphere.MN = 0.0;
	Atmosphere.dTs = 0.0;
	RunMaxPower();
#endif