Option switchGuess {
	allowedValues = { "ON", "OFF" }
	IOstatus = "input";
	trigger=FALSE;
}

Option switchGuessType {
	allowedValues = { "PC", "FanNcPct", "LPCNcPct", "HPCNcPct", "Wfuel", "FAR", "EPR" }
	IOstatus = "input";
	trigger=FALSE;
}

#include <Ambient.map>
#include <BPR.map>
#include <FanRline.map>
#include <LPCRline.map>
#include <HPCRline.map>
#include <FAR.map>
#include <Wfuel.map>
#include <HPTParm.map>
#include <LPTParm.map>
#include <HPNmech.map>
#include <LPNmech.map>

void calculate() {

	if (switchGuess == "ON" && switchDes == "OFFDESIGN"){

		if( getPassType() <= 0) {

			Ambient.W = TB_Ambient(Ambient.alt,Ambient.MN,Ambient.dTs,PC,FanNcPct,LPCNcPct,HPCNcPct,Wfuel,far,EPR);
			Splitter.BPR = TB_BPR(Ambient.alt,Ambient.MN,Ambient.dTs,PC,FanNcPct,LPCNcPct,HPCNcPct,Wfuel,far,EPR);

			Fan.S_map.RlineMap = TB_FanRline(Ambient.alt,Ambient.MN,Ambient.dTs,PC,FanNcPct,LPCNcPct,HPCNcPct,Wfuel,far,EPR);
			LPC.S_map.RlineMap = TB_LPCRline(Ambient.alt,Ambient.MN,Ambient.dTs,PC,FanNcPct,LPCNcPct,HPCNcPct,Wfuel,far,EPR);
			HPC.S_map.RlineMap = TB_HPCRline(Ambient.alt,Ambient.MN,Ambient.dTs,PC,FanNcPct,LPCNcPct,HPCNcPct,Wfuel,far,EPR);

			Burner.FAR = TB_FAR(Ambient.alt,Ambient.MN,Ambient.dTs,PC,FanNcPct,LPCNcPct,HPCNcPct,Wfuel,far,EPR);
			Burner.Wfuel = TB_Wfuel(Ambient.alt,Ambient.MN,Ambient.dTs,PC,FanNcPct,LPCNcPct,HPCNcPct,Wfuel,far,EPR);

			HPT.S_map.parmMap = TB_HPTParm(Ambient.alt,Ambient.MN,Ambient.dTs,PC,FanNcPct,LPCNcPct,HPCNcPct,Wfuel,far,EPR);
			LPT.S_map.parmMap = TB_LPTParm(Ambient.alt,Ambient.MN,Ambient.dTs,PC,FanNcPct,LPCNcPct,HPCNcPct,Wfuel,far,EPR);

			HP_Shaft.Nmech = TB_HPNmech(Ambient.alt,Ambient.MN,Ambient.dTs,PC,FanNcPct,LPCNcPct,HPCNcPct,Wfuel,far,EPR);
			LP_Shaft.Nmech = TB_LPNmech(Ambient.alt,Ambient.MN,Ambient.dTs,PC,FanNcPct,LPCNcPct,HPCNcPct,Wfuel,far,EPR);

		}

	}

}