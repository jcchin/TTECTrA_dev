Option switchGuess {
	allowedValues = { "ON", "OFF" }
	IOstatus = "input";
	trigger=FALSE;
}

Option switchGuessType {
	allowedValues = { "PC", "FanNcPct", "LPCNcPct", "HPCNcPct", "Wfuel", "FAR", "EPR" }
	IOstatus = "input";
	trigger=FALSE;
}

#include <Ambient.map>
#include <BPR.map>
#include <FanRline.map>
#include <LPCRline.map>
#include <HPCRline.map>
#include <FAR.map>
#include <Wfuel.map>
#include <HPTParm.map>
#include <LPTParm.map>
#include <HPNmech.map>
#include <LPNmech.map>

void calculate() {

	if (switchGuess == "ON" && switchDes == "OFFDESIGN"){

		if(getPassType() <= 0) {
		
			if(switchGuessType == "PC") {
			
				Ambient.W = TB_Ambient_PC(Ambient.alt,Ambient.MN,Ambient.dTs,PC);
				Splitter.BPR = TB_BPR_PC(Ambient.alt,Ambient.MN,Ambient.dTs,PC);
				Fan.S_map.RlineMap = TB_FanRline_PC(Ambient.alt,Ambient.MN,Ambient.dTs,PC);
				LPC.S_map.RlineMap = TB_LPCRline_PC(Ambient.alt,Ambient.MN,Ambient.dTs,PC);
				HPC.S_map.RlineMap = TB_HPCRline_PC(Ambient.alt,Ambient.MN,Ambient.dTs,PC);
				Burner.FAR = TB_FAR_PC(Ambient.alt,Ambient.MN,Ambient.dTs,PC);
				Burner.Wfuel = TB_Wfuel_PC(Ambient.alt,Ambient.MN,Ambient.dTs,PC);
				HPT.S_map.parmMap = TB_HPTParm_PC(Ambient.alt,Ambient.MN,Ambient.dTs,PC);
				LPT.S_map.parmMap = TB_LPTParm_PC(Ambient.alt,Ambient.MN,Ambient.dTs,PC);
				HP_Shaft.Nmech = TB_HPNmech_PC(Ambient.alt,Ambient.MN,Ambient.dTs,PC);
				LP_Shaft.Nmech = TB_LPNmech_PC(Ambient.alt,Ambient.MN,Ambient.dTs,PC);
			
			}
			
			else if(switchGuessType == "FanNcPct") {
			
				Ambient.W = TB_Ambient_FanNcPct(Ambient.alt,Ambient.MN,Ambient.dTs,FanNcPct);
				Splitter.BPR = TB_BPR_FanNcPct(Ambient.alt,Ambient.MN,Ambient.dTs,FanNcPct);
				Fan.S_map.RlineMap = TB_FanRline_FanNcPct(Ambient.alt,Ambient.MN,Ambient.dTs,FanNcPct);
				LPC.S_map.RlineMap = TB_LPCRline_FanNcPct(Ambient.alt,Ambient.MN,Ambient.dTs,FanNcPct);
				HPC.S_map.RlineMap = TB_HPCRline_FanNcPct(Ambient.alt,Ambient.MN,Ambient.dTs,FanNcPct);
				Burner.FAR = TB_FAR_FanNcPct(Ambient.alt,Ambient.MN,Ambient.dTs,FanNcPct);
				Burner.Wfuel = TB_Wfuel_FanNcPct(Ambient.alt,Ambient.MN,Ambient.dTs,FanNcPct);
				HPT.S_map.parmMap = TB_HPTParm_FanNcPct(Ambient.alt,Ambient.MN,Ambient.dTs,FanNcPct);
				LPT.S_map.parmMap = TB_LPTParm_FanNcPct(Ambient.alt,Ambient.MN,Ambient.dTs,FanNcPct);
				HP_Shaft.Nmech = TB_HPNmech_FanNcPct(Ambient.alt,Ambient.MN,Ambient.dTs,FanNcPct);
				LP_Shaft.Nmech = TB_LPNmech_FanNcPct(Ambient.alt,Ambient.MN,Ambient.dTs,FanNcPct);
				
			}
		
			else if(switchGuessType == "LPCNcPct") {
			
				Ambient.W = TB_Ambient_LPCNcPct(Ambient.alt,Ambient.MN,Ambient.dTs,LPCNcPct);
				Splitter.BPR = TB_BPR_LPCNcPct(Ambient.alt,Ambient.MN,Ambient.dTs,LPCNcPct);
				Fan.S_map.RlineMap = TB_FanRline_LPCNcPct(Ambient.alt,Ambient.MN,Ambient.dTs,LPCNcPct);
				LPC.S_map.RlineMap = TB_LPCRline_LPCNcPct(Ambient.alt,Ambient.MN,Ambient.dTs,LPCNcPct);
				HPC.S_map.RlineMap = TB_HPCRline_LPCNcPct(Ambient.alt,Ambient.MN,Ambient.dTs,LPCNcPct);
				Burner.FAR = TB_FAR_LPCNcPct(Ambient.alt,Ambient.MN,Ambient.dTs,LPCNcPct);
				Burner.Wfuel = TB_Wfuel_LPCNcPct(Ambient.alt,Ambient.MN,Ambient.dTs,LPCNcPct);
				HPT.S_map.parmMap = TB_HPTParm_LPCNcPct(Ambient.alt,Ambient.MN,Ambient.dTs,LPCNcPct);
				LPT.S_map.parmMap = TB_LPTParm_LPCNcPct(Ambient.alt,Ambient.MN,Ambient.dTs,LPCNcPct);
				HP_Shaft.Nmech = TB_HPNmech_LPCNcPct(Ambient.alt,Ambient.MN,Ambient.dTs,LPCNcPct);
				LP_Shaft.Nmech = TB_LPNmech_LPCNcPct(Ambient.alt,Ambient.MN,Ambient.dTs,LPCNcPct);
				
			}
			
			else if(switchGuessType == "HPCNcPct") {
			
				Ambient.W = TB_Ambient_HPCNcPct(Ambient.alt,Ambient.MN,Ambient.dTs,HPCNcPct);
				Splitter.BPR = TB_BPR_HPCNcPct(Ambient.alt,Ambient.MN,Ambient.dTs,HPCNcPct);
				Fan.S_map.RlineMap = TB_FanRline_HPCNcPct(Ambient.alt,Ambient.MN,Ambient.dTs,HPCNcPct);
				LPC.S_map.RlineMap = TB_LPCRline_HPCNcPct(Ambient.alt,Ambient.MN,Ambient.dTs,HPCNcPct);
				HPC.S_map.RlineMap = TB_HPCRline_HPCNcPct(Ambient.alt,Ambient.MN,Ambient.dTs,HPCNcPct);
				Burner.FAR = TB_FAR_HPCNcPct(Ambient.alt,Ambient.MN,Ambient.dTs,HPCNcPct);
				Burner.Wfuel = TB_Wfuel_HPCNcPct(Ambient.alt,Ambient.MN,Ambient.dTs,HPCNcPct);
				HPT.S_map.parmMap = TB_HPTParm_HPCNcPct(Ambient.alt,Ambient.MN,Ambient.dTs,HPCNcPct);
				LPT.S_map.parmMap = TB_LPTParm_HPCNcPct(Ambient.alt,Ambient.MN,Ambient.dTs,HPCNcPct);
				HP_Shaft.Nmech = TB_HPNmech_HPCNcPct(Ambient.alt,Ambient.MN,Ambient.dTs,HPCNcPct);
				LP_Shaft.Nmech = TB_LPNmech_HPCNcPct(Ambient.alt,Ambient.MN,Ambient.dTs,HPCNcPct);
			
			}
			
			else if(switchGuessType == "Wfuel") {
			
				Ambient.W = TB_Ambient_Wfuel(Ambient.alt,Ambient.MN,Ambient.dTs,Wfuel);
				Splitter.BPR = TB_BPR_Wfuel(Ambient.alt,Ambient.MN,Ambient.dTs,Wfuel);
				Fan.S_map.RlineMap = TB_FanRline_Wfuel(Ambient.alt,Ambient.MN,Ambient.dTs,Wfuel);
				LPC.S_map.RlineMap = TB_LPCRline_Wfuel(Ambient.alt,Ambient.MN,Ambient.dTs,Wfuel);
				HPC.S_map.RlineMap = TB_HPCRline_Wfuel(Ambient.alt,Ambient.MN,Ambient.dTs,Wfuel);
				Burner.FAR = TB_FAR_Wfuel(Ambient.alt,Ambient.MN,Ambient.dTs,Wfuel);
				Burner.Wfuel = TB_Wfuel_Wfuel(Ambient.alt,Ambient.MN,Ambient.dTs,Wfuel);
				HPT.S_map.parmMap = TB_HPTParm_Wfuel(Ambient.alt,Ambient.MN,Ambient.dTs,Wfuel);
				LPT.S_map.parmMap = TB_LPTParm_Wfuel(Ambient.alt,Ambient.MN,Ambient.dTs,Wfuel);
				HP_Shaft.Nmech = TB_HPNmech_Wfuel(Ambient.alt,Ambient.MN,Ambient.dTs,Wfuel);
				LP_Shaft.Nmech = TB_LPNmech_Wfuel(Ambient.alt,Ambient.MN,Ambient.dTs,Wfuel);
			
			}
			
			else if(switchGuessType == "FAR") {
			
				Ambient.W = TB_Ambient_FAR(Ambient.alt,Ambient.MN,Ambient.dTs,far_pc);
				Splitter.BPR = TB_BPR_FAR(Ambient.alt,Ambient.MN,Ambient.dTs,far_pc);
				Fan.S_map.RlineMap = TB_FanRline_FAR(Ambient.alt,Ambient.MN,Ambient.dTs,far_pc);
				LPC.S_map.RlineMap = TB_LPCRline_FAR(Ambient.alt,Ambient.MN,Ambient.dTs,far_pc);
				HPC.S_map.RlineMap = TB_HPCRline_FAR(Ambient.alt,Ambient.MN,Ambient.dTs,far_pc);
				Burner.FAR = TB_FAR_FAR(Ambient.alt,Ambient.MN,Ambient.dTs,far_pc);
				Burner.Wfuel = TB_Wfuel_FAR(Ambient.alt,Ambient.MN,Ambient.dTs,far_pc);
				HPT.S_map.parmMap = TB_HPTParm_FAR(Ambient.alt,Ambient.MN,Ambient.dTs,far_pc);
				LPT.S_map.parmMap = TB_LPTParm_FAR(Ambient.alt,Ambient.MN,Ambient.dTs,far_pc);
				HP_Shaft.Nmech = TB_HPNmech_FAR(Ambient.alt,Ambient.MN,Ambient.dTs,far_pc);
				LP_Shaft.Nmech = TB_LPNmech_FAR(Ambient.alt,Ambient.MN,Ambient.dTs,far_pc);
			
			}
			
			else if(switchGuessType == "EPR") {
			
				Ambient.W = TB_Ambient_EPR(Ambient.alt,Ambient.MN,Ambient.dTs,EPR);
				Splitter.BPR = TB_BPR_EPR(Ambient.alt,Ambient.MN,Ambient.dTs,EPR);
				Fan.S_map.RlineMap = TB_FanRline_EPR(Ambient.alt,Ambient.MN,Ambient.dTs,EPR);
				LPC.S_map.RlineMap = TB_LPCRline_EPR(Ambient.alt,Ambient.MN,Ambient.dTs,EPR);
				HPC.S_map.RlineMap = TB_HPCRline_EPR(Ambient.alt,Ambient.MN,Ambient.dTs,EPR);
				Burner.FAR = TB_FAR_EPR(Ambient.alt,Ambient.MN,Ambient.dTs,EPR);
				Burner.Wfuel = TB_Wfuel_EPR(Ambient.alt,Ambient.MN,Ambient.dTs,EPR);
				HPT.S_map.parmMap = TB_HPTParm_EPR(Ambient.alt,Ambient.MN,Ambient.dTs,EPR);
				LPT.S_map.parmMap = TB_LPTParm_EPR(Ambient.alt,Ambient.MN,Ambient.dTs,EPR);
				HP_Shaft.Nmech = TB_HPNmech_EPR(Ambient.alt,Ambient.MN,Ambient.dTs,EPR);
				LP_Shaft.Nmech = TB_LPNmech_EPR(Ambient.alt,Ambient.MN,Ambient.dTs,EPR);
				
			}
		
			// Ambient.W = TB_Ambient(Ambient.alt,Ambient.MN,Ambient.dTs,PC,FanNcPct,LPCNcPct,HPCNcPct,Wfuel,far_pc,EPR);
			// Splitter.BPR = TB_BPR(Ambient.alt,Ambient.MN,Ambient.dTs,PC,FanNcPct,LPCNcPct,HPCNcPct,Wfuel,far_pc,EPR);

			// Fan.S_map.RlineMap = TB_FanRline(Ambient.alt,Ambient.MN,Ambient.dTs,PC,FanNcPct,LPCNcPct,HPCNcPct,Wfuel,far_pc,EPR);
			// LPC.S_map.RlineMap = TB_LPCRline(Ambient.alt,Ambient.MN,Ambient.dTs,PC,FanNcPct,LPCNcPct,HPCNcPct,Wfuel,far_pc,EPR);
			// HPC.S_map.RlineMap = TB_HPCRline(Ambient.alt,Ambient.MN,Ambient.dTs,PC,FanNcPct,LPCNcPct,HPCNcPct,Wfuel,far_pc,EPR);

			// Burner.FAR = TB_FAR(Ambient.alt,Ambient.MN,Ambient.dTs,PC,FanNcPct,LPCNcPct,HPCNcPct,Wfuel,far_pc,EPR);
			// Burner.Wfuel = TB_Wfuel(Ambient.alt,Ambient.MN,Ambient.dTs,PC,FanNcPct,LPCNcPct,HPCNcPct,Wfuel,far_pc,EPR);

			// HPT.S_map.parmMap = TB_HPTParm(Ambient.alt,Ambient.MN,Ambient.dTs,PC,FanNcPct,LPCNcPct,HPCNcPct,Wfuel,far_pc,EPR);
			// LPT.S_map.parmMap = TB_LPTParm(Ambient.alt,Ambient.MN,Ambient.dTs,PC,FanNcPct,LPCNcPct,HPCNcPct,Wfuel,far_pc,EPR);

			// HP_Shaft.Nmech = TB_HPNmech(Ambient.alt,Ambient.MN,Ambient.dTs,PC,FanNcPct,LPCNcPct,HPCNcPct,Wfuel,far_pc,EPR);
			// LP_Shaft.Nmech = TB_LPNmech(Ambient.alt,Ambient.MN,Ambient.dTs,PC,FanNcPct,LPCNcPct,HPCNcPct,Wfuel,far_pc,EPR);

		}

	}

}