

//----------------------------------------------------------------------------
//  RUN OFFDESIGN POINT
//----------------------------------------------------------------------------

// Minimum and maximum values for the transient operation driver

// Fan percent corrected shaft speed
driver_min = 40;
driver_max = 100;

// LPC percent corrected shaft speed
// driver_min = 42.7702;
// driver_max = 100;

// HPC percent corrected shaft speed
// driver_min = 92.274;
// driver_max = 100;

// Running the model at high power setting
Fan_NcPct_target = driver_max;
// real LPC_NcPct_target = driver_min;
// real HPC_NcPct_target = driver_min;

// Setting up the solver for the steady state case
SS_Setup();

// Inputting the flight conditions
Ambient.alt = 0.0;
Ambient.MN = 0.0;
Ambient.dTs = 0.0;

solver.postExecutionSequence.append("CaseView_SS");

CASE++;
// Running the steady state case
run();
CaseView_SS.display();
page.display();

cout << "\nHigh power successful! \n" << endl;

cout << "Fnet: " << Perf.myFn << endl;

// cout << "Fan NcPct: " << Fan.NcPct << endl;
// cout << "LPC NcPct: " << LPC.NcPct << endl;
// cout << "HPC NcPct: " << HPC.NcPct << endl;

// Recording the maximum allowable fuel flow rate
// real Wfuel_max = Burner.Wfuel;

// driver_max = Wfuel_max; // Uncomment if you want to run to fuel flow rate in transient

cout << "\n" << "Max fuel flow rate: " << Burner.Wfuel << endl;

// Removing independents and dependents from the solver for linear model generation
linear_model_setup();

// Generating linear model
lin_mod.generate();

// Outputting linear model generation results to linearModels.out file
linear_model_output();

// Adding removed independents and dependents for linear model generation to the solver
linear_model_remove();

//----------------------------------------------------------------------------------
// Power hook at SLS - Linearization at each point
//----------------------------------------------------------------------------------

Fan_NcPct_target = 90;
CASE++;
run();
CaseView_SS.display();
page.display();

// Removing independents and dependents from the solver for linear model generation
linear_model_setup();

// Generating linear model
lin_mod.generate();

// Outputting linear model generation results to linearModels.out file
linear_model_output();

// Adding removed independents and dependents for linear model generation to the solver
linear_model_remove();

Fan_NcPct_target = 80;
CASE++;
run();
CaseView_SS.display();
page.display();

// Removing independents and dependents from the solver for linear model generation
linear_model_setup();

// Generating linear model
lin_mod.generate();

// Outputting linear model generation results to linearModels.out file
linear_model_output();

// Adding removed independents and dependents for linear model generation to the solver
linear_model_remove();

Fan_NcPct_target = 70;
CASE++;
run();
CaseView_SS.display();
page.display();

// Removing independents and dependents from the solver for linear model generation
linear_model_setup();

// Generating linear model
lin_mod.generate();

// Outputting linear model generation results to linearModels.out file
linear_model_output();

// Adding removed independents and dependents for linear model generation to the solver
linear_model_remove();

Fan_NcPct_target = 60;
CASE++;
run();
CaseView_SS.display();
page.display();

// Removing independents and dependents from the solver for linear model generation
linear_model_setup();

// Generating linear model
lin_mod.generate();

// Outputting linear model generation results to linearModels.out file
linear_model_output();

// Adding removed independents and dependents for linear model generation to the solver
linear_model_remove();

Fan_NcPct_target = 50;
CASE++;
run();
CaseView_SS.display();
page.display();

// Removing independents and dependents from the solver for linear model generation
linear_model_setup();

// Generating linear model
lin_mod.generate();

// Outputting linear model generation results to linearModels.out file
linear_model_output();

// Adding removed independents and dependents for linear model generation to the solver
linear_model_remove();

// Running the model at low power setting
Fan_NcPct_target = driver_min;
// LPC_NcPct_target = driver_max;
// HPC_NcPct_target = driver_max;

CASE++;
run();
CaseView_SS.display();
page.display();

cout << "\nLow power successful! \n" << endl;

cout << "Fnet: " << Perf.myFn << endl;

// cout << "Fan NcPct: " << Fan.NcPct << endl;
// cout << "LPC NcPct: " << LPC.NcPct << endl;
// cout << "HPC NcPct: " << HPC.NcPct << endl;

// Recording minimum allowable fuel flow rate
// real Wfuel_min = Burner.Wfuel;

// driver_min = Wfuel_min; // Uncomment if you want to run to fuel flow rate in transient

cout << "\n" << "Min fuel flow rate: " << Burner.Wfuel << endl;

// printPride();

// Removing independents and dependents from the solver for linear model generation
linear_model_setup();

// Generating linear model
lin_mod.generate();

// Outputting linear model generation results to linearModels.out file
linear_model_output();

// Adding removed independents and dependents for linear model generation to the solver
linear_model_remove();

//----------------------------------------------------------------------------------
// Increasing Fan NcPct to move onto other flight conditions
//----------------------------------------------------------------------------------

Fan_NcPct_target = 50;
CASE++;
run();

Fan_NcPct_target = 60;
CASE++;
run();

Fan_NcPct_target = 70;
CASE++;
run();

Fan_NcPct_target = 80;
CASE++;
run();

Fan_NcPct_target = 90;
CASE++;
run();

Fan_NcPct_target = 100;
CASE++;
run();

//----------------------------------------------------------------------------------
// Increasing Mach number at SL for hot day take off
//----------------------------------------------------------------------------------

Ambient.MN = 0.1;
CASE++;
run();

Ambient.MN = 0.2;
CASE++;
run();

Ambient.MN = 0.25;
CASE++;
run();

//----------------------------------------------------------------------------------
// Increasing temperature offset at SL for hot day take off
//----------------------------------------------------------------------------------

Ambient.dTs = 10;
CASE++;
run();

Ambient.dTs = 20;
CASE++;
run();

Ambient.dTs = 30;
CASE++;
run();

Ambient.dTs = 40;
CASE++;
run();

//----------------------------------------------------------------------------------
// Linearization at hot day take off
//----------------------------------------------------------------------------------

Ambient.dTs = 50;
CASE++;
run();
CaseView_SS.display();
page.display();

// Removing independents and dependents from the solver for linear model generation
linear_model_setup();

// Generating linear model
lin_mod.generate();

// Outputting linear model generation results to linearModels.out file
linear_model_output();

// Adding removed independents and dependents for linear model generation to the solver
linear_model_remove();

//----------------------------------------------------------------------------------
// Lowering temperature offset
//----------------------------------------------------------------------------------

Ambient.dTs = 40;
CASE++;
run();

Ambient.dTs = 30;
CASE++;
run();

Ambient.dTs = 20;
CASE++;
run();

Ambient.dTs = 10;
CASE++;
run();

Ambient.dTs = 0;
CASE++;
run();

//----------------------------------------------------------------------------------
// Increasing altitude to 5,000 ft from SL
//----------------------------------------------------------------------------------
Ambient.alt = 2500;
CASE++;
run();

Ambient.alt = 5000;
CASE++;
run();

//----------------------------------------------------------------------------------
// Increasing Mach number from 0.25 to 0.4 at 5,000 ft
//----------------------------------------------------------------------------------

Ambient.MN = 0.30;
CASE++;
run();

Ambient.MN = 0.35;
CASE++;
run();

Ambient.MN = 0.40;
CASE++;
run();
CaseView_SS.display();
page.display();

// Removing independents and dependents from the solver for linear model generation
linear_model_setup();

// Generating linear model
lin_mod.generate();

// Outputting linear model generation results to linearModels.out file
linear_model_output();

// Adding removed independents and dependents for linear model generation to the solver
linear_model_remove();

//----------------------------------------------------------------------------------
// Increasing altitude from 5,000 ft to 10,000 ft at M = 0.4
//----------------------------------------------------------------------------------

Ambient.alt = 6000;
CASE++;
run();

Ambient.alt = 7000;
CASE++;
run();

Ambient.alt = 8000;
CASE++;
run();

Ambient.alt = 9000;
CASE++;
run();

Ambient.alt = 10000;
CASE++;
run();

//----------------------------------------------------------------------------------
// Increasing Mach number from 0.4 to 0.5 at 10,000 ft
//----------------------------------------------------------------------------------

Ambient.MN = 0.45;
CASE++;
run();

Ambient.MN = 0.50;
CASE++;
run();
CaseView_SS.display();
page.display();

// Removing independents and dependents from the solver for linear model generation
linear_model_setup();

// Generating linear model
lin_mod.generate();

// Outputting linear model generation results to linearModels.out file
linear_model_output();

// Adding removed independents and dependents for linear model generation to the solver
linear_model_remove();

//----------------------------------------------------------------------------------
// Increasing altitude from 10,000 ft to 15,000 ft at M = 0.5
//----------------------------------------------------------------------------------

Ambient.alt = 11000;
CASE++;
run();

Ambient.alt = 12000;
CASE++;
run();

Ambient.alt = 13000;
CASE++;
run();

Ambient.alt = 14000;
CASE++;
run();

Ambient.alt = 15000;
CASE++;
run();

//----------------------------------------------------------------------------------
// Increasing Mach number from 0.5 to 0.65 at 15,000 ft
//----------------------------------------------------------------------------------

Ambient.MN = 0.55;
CASE++;
run();

Ambient.MN = 0.60;
CASE++;
run();

Ambient.MN = 0.65;
CASE++;
run();
CaseView_SS.display();
page.display();

// Removing independents and dependents from the solver for linear model generation
linear_model_setup();

// Generating linear model
lin_mod.generate();

// Outputting linear model generation results to linearModels.out file
linear_model_output();

// Adding removed independents and dependents for linear model generation to the solver
linear_model_remove();

//----------------------------------------------------------------------------------
// Increasing altitude from 15,000 ft to 20,000 ft at M = 0.65
//----------------------------------------------------------------------------------

Ambient.alt = 16000;
CASE++;
run();

Ambient.alt = 17000;
CASE++;
run();

Ambient.alt = 18000;
CASE++;
run();

Ambient.alt = 19000;
CASE++;
run();

Ambient.alt = 20000;
CASE++;
run();
CaseView_SS.display();
page.display();

// Removing independents and dependents from the solver for linear model generation
linear_model_setup();

// Generating linear model
lin_mod.generate();

// Outputting linear model generation results to linearModels.out file
linear_model_output();

// Adding removed independents and dependents for linear model generation to the solver
linear_model_remove();

//----------------------------------------------------------------------------------
// Increasing altitude from 20,000 ft to 25,000 ft at M = 0.65
//----------------------------------------------------------------------------------

Ambient.alt = 21000;
CASE++;
run();

Ambient.alt = 22000;
CASE++;
run();

Ambient.alt = 23000;
CASE++;
run();

Ambient.alt = 24000;
CASE++;
run();

Ambient.alt = 25000;
CASE++;
run();
CaseView_SS.display();
page.display();

// Removing independents and dependents from the solver for linear model generation
linear_model_setup();

// Generating linear model
lin_mod.generate();

// Outputting linear model generation results to linearModels.out file
linear_model_output();

// Adding removed independents and dependents for linear model generation to the solver
linear_model_remove();

//----------------------------------------------------------------------------------
// Increasing altitude from 25,000 ft to 30,000 ft at M = 0.65
//----------------------------------------------------------------------------------

Ambient.alt = 26000;
CASE++;
run();

Ambient.alt = 27000;
CASE++;
run();

Ambient.alt = 28000;
CASE++;
run();

Ambient.alt = 29000;
CASE++;
run();

Ambient.alt = 30000;
CASE++;
run();

//----------------------------------------------------------------------------------
// Increasing Mach number from 0.65 to 0.75 at 30,000 ft
//----------------------------------------------------------------------------------

Ambient.MN = 0.70;
CASE++;
run();

Ambient.MN = 0.75;
CASE++;
run();
CaseView_SS.display();
page.display();

// Removing independents and dependents from the solver for linear model generation
linear_model_setup();

// Generating linear model
lin_mod.generate();

// Outputting linear model generation results to linearModels.out file
linear_model_output();

// Adding removed independents and dependents for linear model generation to the solver
linear_model_remove();

//----------------------------------------------------------------------------------
// Increasing altitude from 30,000 ft to 35,000 ft at M = 0.75
//----------------------------------------------------------------------------------

Ambient.alt = 31000;
CASE++;
run();

Ambient.alt = 32000;
CASE++;
run();

Ambient.alt = 33000;
CASE++;
run();

Ambient.alt = 34000;
CASE++;
run();

Ambient.alt = 35000;
CASE++;
run();

//----------------------------------------------------------------------------------
// Increasing Mach number from 0.75 to 0.80 at 35,000 ft
//----------------------------------------------------------------------------------

Ambient.MN = 0.80;
CASE++;
run();
CaseView_SS.display();
page.display();

// Removing independents and dependents from the solver for linear model generation
linear_model_setup();

// Generating linear model
lin_mod.generate();

// Outputting linear model generation results to linearModels.out file
linear_model_output();

// Adding removed independents and dependents for linear model generation to the solver
linear_model_remove();

//----------------------------------------------------------------------------------
// Power hook at cruise condition (0.80 at 35,000 ft)
//----------------------------------------------------------------------------------

Fan_NcPct_target = 90;
CASE++;
run();
CaseView_SS.display();
page.display();

// Removing independents and dependents from the solver for linear model generation
linear_model_setup();

// Generating linear model
lin_mod.generate();

// Outputting linear model generation results to linearModels.out file
linear_model_output();

// Adding removed independents and dependents for linear model generation to the solver
linear_model_remove();

Fan_NcPct_target = 80;
CASE++;
run();
CaseView_SS.display();
page.display();

// Removing independents and dependents from the solver for linear model generation
linear_model_setup();

// Generating linear model
lin_mod.generate();

// Outputting linear model generation results to linearModels.out file
linear_model_output();

// Adding removed independents and dependents for linear model generation to the solver
linear_model_remove();

Fan_NcPct_target = 70;
CASE++;
run();
CaseView_SS.display();
page.display();

// Removing independents and dependents from the solver for linear model generation
linear_model_setup();

// Generating linear model
lin_mod.generate();

// Outputting linear model generation results to linearModels.out file
linear_model_output();

// Adding removed independents and dependents for linear model generation to the solver
linear_model_remove();

Fan_NcPct_target = 60;
CASE++;
run();
CaseView_SS.display();
page.display();

// Removing independents and dependents from the solver for linear model generation
linear_model_setup();

// Generating linear model
lin_mod.generate();

// Outputting linear model generation results to linearModels.out file
linear_model_output();

// Adding removed independents and dependents for linear model generation to the solver
linear_model_remove();